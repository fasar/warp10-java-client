//
//   Copyright 2019-2021  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

//
// OSS Master Key, used to decrypt any 'wrapped:base64' key
// Valid formats are hex:... or base64:....
//
#oss.master.key = hex:hhhhhh...

//
// 128 bits SipHash key for verifying class names. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.class = hex:2d1c290f59fbf78fe058beb4346ad4cd

//
// 128 bits SipHash key for verifying labels. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.labels = hex:6384ddccf7ad452f9bd93b39d91009fb

//
// 128 bits SipHash key for verifying tokens. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.token = hex:1f78275abc5731e0ce352fbdd5ba0123

//
// 128 bits SipHash key for verifying app names. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.app = hex:0f7acbf55bf0b8a1e59fd64e5e16f69c

//
// 128/192/256 bits AES key for protecting tokens.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.token = hex:67bc267a8b6d9b327a9d5fff22bed4aee0df0298e32ce252dde3eac2ff052be6

//
// 128/192/256 bits AES key for generating secure scripts.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.scripts = hex:450a77fb6bd069b794850ab25334345c9efe6a66c504ccb336e88cf89ee9dd66

//
// 128/192/256 bits AES key for wrapping metasets.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.metasets = hex:8f59a69c0c465cd4c2b36269392be1545215eb4364c36552b831599706beba7f

//
// 128/192/256 bits AES key for protecting log messages.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
#warp.aes.logging = hex:37a648c5f0e0ce230f7249eb0b10eeb9662b91c56a0f8cb7beb77c620ebf22cd

//
// 128 bits SipHash key for signing fetch requests. Signed fetch request expose owner/producer.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
#fetch.psk = hex:20b453c78d96cba591f04be7e5f18360

//
// Secret for REPORT, if unset, a random secret will be generated and output in the logs and on stdout
//
warp10.report.secret = hex:3ee1b72e-b051-4e84-a3ac-4e20c6c0a936

//
// Manager secret, must be set to use the managing functions
//
#warp10.manager.secret =
